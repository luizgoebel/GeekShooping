// <auto-generated />
using GeekShooping.ProductAPI.Model.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GeekShooping.ProductAPI.Migrations
{
    [DbContext(typeof(MySQLContext))]
    [Migration("20251012202911_SeedProducDataTable")]
    partial class SeedProducDataTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("GeekShooping.ProductAPI.Model.Product", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("category_name");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("description");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("image_url");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("name");

                    b.Property<decimal>("Price")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("price");

                    b.HasKey("Id");

                    b.ToTable("product");

                    b.HasData(
                        new
                        {
                            Id = 4L,
                            CategoryName = "Roupas",
                            Description = "Camiseta do GeekShooping",
                            ImageUrl = "https://static.geekshooping.com/img/camiseta-geek.png",
                            Name = "Camiseta Geek",
                            Price = 29.90m
                        },
                        new
                        {
                            Id = 5L,
                            CategoryName = "Acessórios",
                            Description = "Caneca personalizada do GeekShooping",
                            ImageUrl = "https://static.geekshooping.com/img/caneca-geek.png",
                            Name = "Caneca Geek",
                            Price = 15.50m
                        },
                        new
                        {
                            Id = 6L,
                            CategoryName = "Eletrônicos",
                            Description = "Mouse gamer do GeekShooping",
                            ImageUrl = "https://static.geekshooping.com/img/mouse-gamer.png",
                            Name = "Mouse Gamer",
                            Price = 199.90m
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
